//////////////////////////////////////////////////////////////////
//
// Простой хелпер создания временных файлов и каталогов
//
//////////////////////////////////////////////////////////////////

#Использовать logos

Перем мВременныеФайлы;
Перем Лог;
Перем ЭтоWindows;

Перем БазовыйКаталог Экспорт;

/////////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция НовоеИмяФайла(Знач Расширение = "tmp") Экспорт
	
	Если БазовыйКаталог = Неопределено Тогда
		ИмяВремФайла = ПолучитьИмяВременногоФайла(Расширение);
	Иначе
		ФайлОбъект = Новый Файл(ПолучитьИмяВременногоФайла(Расширение));
		Возврат ОбъединитьПути(БазовыйКаталог, ФайлОбъект.Имя);
	КонецЕсли;
	
	мВременныеФайлы.Добавить(ИмяВремФайла);
	
	Возврат ИмяВремФайла;
	
КонецФункции

Функция СоздатьФайл(Знач Расширение = "tmp") Экспорт

	ИмяФайла = НовоеИмяФайла(Расширение);
    Кодировка = ?(ЭтоWindows, КодировкаТекста.ANSI, "utf-8");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, Кодировка);
	ЗаписьТекста.Закрыть();
	Возврат ИмяФайла;

КонецФункции

Функция СоздатьКаталог(Знач Расширение = "tmp") Экспорт

	ИмяФайла = НовоеИмяФайла(Расширение);
	СоздатьКаталог(ИмяФайла);
	
	Возврат ИмяФайла;

КонецФункции

Процедура Удалить() Экспорт
	
	КрайнийИндекс = мВременныеФайлы.Количество()-1;
	Для Сч = 0 По КрайнийИндекс Цикл
		
		Индекс = КрайнийИндекс-Сч;
		ИмяВременногоФайла = мВременныеФайлы[Индекс];
		Если БезопасноУдалитьФайл(ИмяВременногоФайла) Тогда
			мВременныеФайлы.Удалить(Индекс);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция УдалитьФайл(Знач Путь) Экспорт
	Возврат БезопасноУдалитьФайл(Путь);
КонецФункции

Функция БезопасноУдалитьФайл(Знач Путь) Экспорт
	
	Попытка
		УдалитьФайлы(Путь);
		Возврат Истина;
	Исключение
		ТекстОшибки = "Попытка удаления "+Путь+" закончилась неудачей, по причине "+ОписаниеОшибки();
		УдаляемыйФайл = Новый Файл(Путь);
		Если УдаляемыйФайл.ЭтоФайл() и УдаляемыйФайл.ПолучитьТолькоЧтение() Тогда
			УдаляемыйФайл.УстановитьТолькоЧтение(Ложь);
			Попытка
				УдалитьФайлы(Путь);
				Возврат Истина;
			Исключение
				Лог.Предупреждение(ТекстОшибки);
			 КонецПопытки;
		Иначе
			Лог.Предупреждение(ТекстОшибки);
		КонецЕсли; 
	КонецПопытки;

	Возврат Ложь;
	
КонецФункции

// Массив накопленных путей временных файлов
//
//  Возвращаемое значение:
//   Массив - <описание возвращаемого значения>
//
Функция Файлы() Экспорт
	Результат = Новый Массив;
	Для каждого Путь Из мВременныеФайлы Цикл
		Результат.Добавить(Путь);
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Удалить все накопленные временные файлы, которые были добавлены после фиксации набора временных файлов.
// Удобно использовать для быстрой очистки на очередной итерации
// Предварительно нужно зафиксировать текущий набор временных файлов через Файлы()
// Алгоритм:
// 	ВременныеФайлыДо = ВременныеФайлы.Файлы();
// 	Попытка
// 		// основной код						
// 	Исключение
// 		// обработка ошибок
// 		ВременныеФайлы.УдалитьНакопленныеВременныеФайлы(ВременныеФайлыДо);
// 		ВызватьИсключение;
// 	КонецПопытки;
// 	ВременныеФайлы.УдалитьНакопленныеВременныеФайлы(ВременныеФайлыДо);
//
// Параметры:
//   ВременныеФайлыДо - Массив - набор ранее полученных временных файлов через Файлы()
//
Процедура УдалитьНакопленныеВременныеФайлы(Знач ВременныеФайлыДо) Экспорт
	ВременныеФайлыПосле = Файлы();

	ОтборФайлов = Новый Соответствие;
	СкопироватьКоллекцию(ВременныеФайлыДо, ОтборФайлов);

	КрайнийИндекс = ВременныеФайлыПосле.Количество()-1;
	Для Сч = 0 По КрайнийИндекс Цикл
		
		Индекс = КрайнийИндекс-Сч;
		ИмяВременногоФайла = ВременныеФайлыПосле[Индекс];
		Если ОтборФайлов.Получить(ИмяВременногоФайла) = Неопределено
				И БезопасноУдалитьФайл(ИмяВременногоФайла) Тогда
				ВременныеФайлыПосле.Удалить(Индекс);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Скопировать одну простую коллекцию (Массив) в другую (Структура, Соответствие)
// значение из источника становится и ключем, и значение приемника
//
// Параметры:
//   Массив - Массив - <описание параметра>
//   Приемник - Структура, Соответствие - <описание параметра>
//
Процедура СкопироватьКоллекцию(Массив, Приемник) Экспорт
	Для каждого Значение Из Массив Цикл
		Приемник.Вставить(Значение, Значение);
	КонецЦикла;
КонецПроцедуры

СистемнаяИнформация = Новый СистемнаяИнформация;
ЭтоWindows = Найти(НРег(СистемнаяИнформация.ВерсияОС), "windows") > 0;

мВременныеФайлы = Новый Массив;
Лог = Логирование.ПолучитьЛог("oscript.app.tempfiles");
